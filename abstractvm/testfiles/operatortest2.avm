; tests the limits of the operators
; shows overflow protections
; caution: they all error

push int8(100)
push int8(100)
dump
add
pop
pop
push int16(20000)
push int16(20000)
dump
add
pop
pop
push int32(1500000000)
push int32(1500000000)
dump
add
pop
pop
push float(200000000000000000000000000000000000000)
push float(200000000000000000000000000000000000000)
dump
add
pop
pop
push double(90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
push double(90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
dump
add
pop
pop

push int8(-100)
push int8(100)
dump
sub
pop
pop
push int16(-20000)
push int16(20000)
dump
sub
pop
pop
push int32(-1500000000)
push int32(1500000000)
dump
sub
pop
pop
push float(-200000000000000000000000000000000000000)
push float(200000000000000000000000000000000000000)
dump
sub
pop
pop
push double(-90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
push double(90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
dump
sub
pop
pop

push int8(12)
push int8(12)
dump
mul
pop
pop
push int16(182)
push int16(182)
dump
mul
pop
pop
push int32(46341)
push int32(46341)
dump
mul
pop
pop
push float(20000000000000000000)
push float(20000000000000000000)
dump
mul
pop
pop
push double(90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
push double(90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
dump
mul
pop
pop

; because of how divide and modulo work, they don't overflow,
; plus initiating a too high a number would error anyways;
; also, because operatortest.avm already showcased all
; overflows and underflows of mixed types, the results with
; the operator will be the same since that's how the code was designed

exit
